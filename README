This project contains a dissassembler I wrote for a project in a reverse engineering class at JHU.
It handles a subset of different features of X86. It is by no means perfect.

This project is written in C with no dependencies required, except for a switch case handling feature
introduced in later C specifications. Any recent version of gcc should be able to compile it no issue.

This project can be built by invoking `make` in the project directory.

A quick summary of the files and their contents:
register.c/.h - functions and types relevant to register parsing
modrm.c/.h - functions and types relevant to modrm byte parsing
sib.c/.h - functions and types relevant to sib byte parsing
prefix.c/.h - functions and types relevant to prefix parsing
op.c/.h - functions and types relevant to opcode parsing
instr.c/.h - functions and types relevant to full instruction parsing
lin.c/.h - implementation of the linear sweep dissassembly algorithm
label.c/.h - implementation of a supporting struct that holds labels and corresponding addresses for the
             printing step
list.c/.h - barebones implementation of a linked list with desired functionality
main.c/.h - main; handles command line input and instruction printing
